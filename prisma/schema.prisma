datasource db {
  provider = "postgresql"  
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
id Int @id @default(autoincrement())

fullName String
email String @unique
password String
role UserRole @default(USER)
verified DateTime 

cart Cart?
oder Order[]
verificationCode VerificationCode?

provider String?
providerId String?

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement()) 
  name String
  imageURL String

category Category @relation(fields: [categoryId], references: [id])
categoryId Int

productVariations ProductVariations[]
ingredients Ingredient[]

createAt DateTime @default(now())
updateAt DateTime @updatedAt

}

model Ingredient {
id Int @id @default(autoincrement())

name String
price Int
imageURL String

products Product[]
items CartItem[]

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}

model ProductVariations {
id Int @id @default(autoincrement())

price Int
size Int?
pizzaDoughType Int?

items CartItem[]

product Product  @relation(fields: [productId], references: [id])
productId Int

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}


model Cart {
id Int @id @default(autoincrement())

user User? @relation(fields: [userId], references: [id])
userId Int @unique

items CartItem[]


totalAmount Int @default(0)

token String

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}


model CartItem {
id Int @id @default(autoincrement())


cart Cart @relation(fields: [cartId], references: [id])
cartId Int

productVariations ProductVariations  @relation(fields: [productVariationsId], references: [id])
productVariationsId Int



ingredients Ingredient[]

quantity Int

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}

model Order {
id Int @id @default(autoincrement())

user User? @relation(fields: [userId], references: [id])
userId Int?

token String
totalAmount String
status OrderStatus
paymentId String?

items Json

fullName String
address String
email String
phone String
comment String?

createAt DateTime @default(now())
updateAt DateTime @updatedAt
}

model VerificationCode{
id Int @id @default(autoincrement())

user User @relation(fields: [userId], references: [id])
userId Int @unique

code String

createAt DateTime @default(now())
}

enum OrderStatus{
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  ADMIN
  USER
}